{"version":3,"sources":["helpers/simple-peer.js","helpers/media-access.js","components/Icons.js","components/video.js","components/goToRoomInput.js","App.js","registerServiceWorker.js","index.js"],"names":["VideoCall","peer","init","stream","initiator","_this","Peer","trickle","reconnectTimer","iceTransportPolicy","config","iceServers","urls","process","split","username","credential","connect","otherId","signal","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","navigator","mediaDevices","getDisplayMedia","stop","ShareScreenIcon","react_default","createElement","xmlns","width","height","viewBox","fill","d","MicOnIcon","MicOffIcon","CamOnIcon","CamOffIcon","constraints","window","audio","video","Video","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","videoCall","start","getUserMedia","then","state","socket","emit","roomId","enter","setState","connecting","localStream","on","data","room","desc","remoteVideo","srcObject","waiting","err","console","log","renderFull","full","remoteStreamUrl","streamUrl","micState","camState","io","component","props","match","params","type","cb","_this2","Promise","_ref","asyncToGenerator","mark","resolve","reject","op","webkitGetUserMedia","mozGetUserMedia","min","ideal","max","sent","localVideo","_x","_x2","apply","arguments","getAudioTracks","length","forEach","track","enabled","getVideoTracks","_this3","_getDisplayStream","getDisplayStream","oninactive","removeStream","addStream","_this4","className","autoPlay","id","muted","ref","style","border","concat","onClick","getDisplay","Icons_ShareScreenIcon","setAudioLocal","Icons_MicOnIcon","Icons_MicOffIcon","setVideoLocal","Icons_CamOnIcon","Icons_CamOffIcon","React","Component","goToRoom","history","push","goToRoomInput","_useState","useState","shortId","generate","_useState2","slicedToArray","setRoomId","value","placeholder","onChange","event","target","App","BrowserRouter","Fragment","Route","path","exact","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9bbe279a.chunk.js","sourcesContent":["import Peer from 'simple-peer'\n\nexport default class VideoCall {\n    peer = null \n    init = (stream, initiator) => {\n        this.peer = new Peer({\n            initiator: initiator,\n            stream: stream,\n            trickle: false,\n            reconnectTimer: 1000,\n            iceTransportPolicy: 'relay',\n            config: {\n                iceServers: [\n                    { urls: process.env.REACT_APP_STUN_SERVERS.split(',') },\n                    {\n                        urls: process.env.REACT_APP_TURN_SERVERS.split(','),\n                        username: process.env.REACT_APP_TURN_USERNAME,\n                        credential: process.env.REACT_APP_TURN_CREDENCIAL\n                    },\n                ]\n            }\n        })\n        return this.peer\n    }\n    connect = (otherId) => {\n        this.peer.signal(otherId)\n    }  \n} ","export async function getDisplayStream(){\n    return navigator.mediaDevices.getDisplayMedia();\n}","import React from 'react'\nexport const ShareScreenIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path fill=\"greenyellow\" d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.11-.9-2-2-2H4c-1.11 0-2 .89-2 2v10c0 1.1.89 2 2 2H0v2h24v-2h-4zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l4 3.73-4 3.74z\"/></svg>\n);\n\nexport const MicOnIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path fill=\"greenyellow\" d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n)\n\nexport const MicOffIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"/></svg>\n)\n\nexport const CamOnIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/></svg>\n)\n\nexport const CamOffIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"/></svg>\n)\n","import React from 'react';\nimport VideoCall from '../helpers/simple-peer';\nimport '../styles/video.css';\nimport io from 'socket.io-client';\nimport { getDisplayStream } from '../helpers/media-access';\nimport {ShareScreenIcon,MicOnIcon,MicOffIcon,CamOnIcon,CamOffIcon} from './Icons';\n\n// Put variables in global scope to make them available to the browser console.\nconst constraints = window.constraints = {\n  audio: true,\n  video: true\n};\n\nclass Video extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      localStream: {},\n      remoteStreamUrl: '',\n      streamUrl: '',\n      initiator: false,\n      peer: {},\n      full: false,\n      connecting: false,\n      waiting: true,\n      micState:true,\n      camState:true,\n    };\n  }\n  videoCall = new VideoCall();\n\n  componentDidMount() {\n    const socket = io(process.env.REACT_APP_SIGNALING_SERVER);\n    const component = this;\n    const { roomId } = this.props.match.params;\n    this.setState({ socket, roomId });\n    \n    this.getUserMedia().then(() => {\n      socket.emit('join', { roomId: roomId });\n    });\n\n    socket.on('init', () => {\n      component.setState({ initiator: true });\n    });\n    socket.on('ready', () => {\n      component.enter(roomId);\n    });\n    socket.on('desc', data => {\n      if (data.type === 'offer' && component.state.initiator) return;\n      if (data.type === 'answer' && !component.state.initiator) return;\n      component.call(data);\n    });\n    socket.on('disconnected', () => {\n      component.setState({ initiator: true });\n    });\n    socket.on('full', () => {\n      component.setState({ full: true });\n    });\n  }\n\n  start = () => {\n    this.getUserMedia().then(() => {\n      this.state.socket.emit('join', { roomId: this.state.roomId });\n    });\n  };\n\n  getUserMedia(cb) {\n    return new Promise(async (resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        video: {\n          width: { min: 160, ideal: 640, max: 1280 },\n          height: { min: 120, ideal: 360, max: 720 }\n        },\n        audio: true\n      };\n      // alert(123)\n      // navigator.mediaDevices.enumerateDevices().then(devices=>{console.dir(devices)});\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      navigator.getUserMedia(\n        op,\n        stream => {\n          this.setState({ streamUrl: stream, localStream: stream });\n          this.localVideo.srcObject = stream;\n          resolve();\n        },\n        () => {}\n      );\n    });\n  }\n\n  setAudioLocal(){\n    if(this.state.localStream.getAudioTracks().length>0){\n      this.state.localStream.getAudioTracks().forEach(track => {\n        track.enabled=!track.enabled;\n      });\n    }\n    this.setState({\n      micState:!this.state.micState\n    })\n  }\n\n  setVideoLocal(){\n    if(this.state.localStream.getVideoTracks().length>0){\n      this.state.localStream.getVideoTracks().forEach(track => {\n        track.enabled=!track.enabled;\n      });\n    }\n    this.setState({\n      camState:!this.state.camState\n    })\n  }\n\n  getDisplay() {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      this.setState({ streamUrl: stream, localStream: stream });\n      this.localVideo.srcObject = stream;\n      this.state.peer.addStream(stream);\n    });\n  }\n\n  enter = roomId => {\n    this.setState({ connecting: true });\n    const peer = this.videoCall.init(\n      this.state.localStream,\n      this.state.initiator\n    );\n    this.setState({ peer });\n\n    peer.on('signal', data => {\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      this.state.socket.emit('signal', signal);\n    });\n    peer.on('stream', stream => {\n      this.remoteVideo.srcObject = stream;\n      this.setState({ connecting: false, waiting: false });\n    });\n    peer.on('error', function(err) {\n      console.log(err);\n    });\n  };\n\n  call = otherId => {\n    this.videoCall.connect(otherId);\n  };\n  renderFull = () => {\n    if (this.state.full) {\n      return 'The room is full';\n    }\n  };\n  render() {\n    return (\n      <div className='video-wrapper'>\n        <div className='local-video-wrapper'>\n          <video\n            autoPlay\n            // playsinline\n            id='localVideo'\n            muted\n            ref={video => (this.localVideo = video)}\n            style={{ border: \"2px solid red\", height: \"200px\"}}\n          />\n        </div>\n        <video\n          autoPlay\n          // playsinline\n          className={`${\n            this.state.connecting || this.state.waiting ? 'hide' : ''\n          }`}\n          id='remoteVideo'\n          ref={video => (this.remoteVideo = video)}\n          style={{ border: \"2px solid green\", height: \"200px\"}}\n        />\n\n        <div className='controls'>\n        <button\n          className='control-btn'\n          onClick={() => {\n            this.getDisplay();\n          }}\n        >\n          <ShareScreenIcon />\n        </button>\n\n\n        <button\n        className='control-btn'\n          onClick={() => {\n            this.setAudioLocal();\n          }}\n        >\n          {\n            this.state.micState?(\n              <MicOnIcon/>\n            ):(\n              <MicOffIcon/>\n            )\n          }\n        </button>\n\n        <button\n        className='control-btn'\n          onClick={() => {\n            this.setVideoLocal();\n          }}\n        >\n          {\n            this.state.camState?(\n              <CamOnIcon/>\n            ):(\n              <CamOffIcon/>\n            )\n          }\n        </button>\n        </div>\n        \n\n\n        {this.state.connecting && (\n          <div className='status'>\n            <p>Establishing connection...</p>\n          </div>\n        )}\n        {this.state.waiting && (\n          <div className='status'>\n            <p>Waiting for someone...</p>\n            <button onClick={() => this.start()}>TESTE</button>\n          </div>\n        )}\n        {this.renderFull()}\n      </div>\n    );\n  }\n}\n\nexport default Video;\n","import React, { useState } from 'react'\nimport shortId from 'shortid'\n\nconst goToRoom = (history, roomId) => {\n  history.push(`/${roomId}`)\n}\n\n\nexport function goToRoomInput({history}) {\n  let [roomId, setRoomId] = useState(shortId.generate());\n\n  return (<div className=\"enter-room-container\">\n    <form>\n          <input type=\"text\" value={roomId} placeholder=\"Room id\" onChange={(event) => {\n            setRoomId(event.target.value)\n          }}/>\n          <button onClick={() => {\n            goToRoom(history, roomId)\n          }}>Enter</button>\n          </form>\n        </div>)\n}","import React, { Component } from 'react';\nimport Video from './components/video'\nimport './App.css';\nimport './styles/video.css'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { goToRoomInput } from './components/goToRoomInput';\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n       <React.Fragment>\n          <Route path=\"/\" exact component={goToRoomInput}/>\n          <Route path=\"/:roomId\" exact component={Video}/>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}